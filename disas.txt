10.0 0.5
!begin_func _init
sub
mov
test
je
callq
add
retq
~end_func
!begin_func .plt
pushq
jmpq
nopl
~end_func
!begin_func puts@plt
jmpq
pushq
jmpq
~end_func
!begin_func __stack_chk_fail@plt
jmpq
pushq
jmpq
~end_func
!begin_func __printf_chk@plt
jmpq
pushq
jmpq
~end_func
!begin_func __isoc99_scanf@plt
jmpq
pushq
jmpq
~end_func
!begin_func __cxa_finalize@plt
jmpq
xchg
~end_func
!begin_func main
sub
lea
mov
mov
xor
lea
callq
mov
lea
mov
xor
callq
lea
callq
mov
xor
jne
xor
add
retq
callq
nopw
xchg
~end_func
!begin_func _start
xor
mov
pop
mov
and
push
push
lea
lea
lea
callq
hlt
nopl
~end_func
!begin_func deregister_tm_clones
lea
push
lea
cmp
mov
je
mov
test
je
pop
jmpq
nopw
pop
retq
nopl
nopw
~end_func
!begin_func register_tm_clones
lea
lea
push
sub
mov
sar
mov
shr
add
sar
je
mov
test
je
pop
jmpq
nopw
pop
retq
nopl
nopw
~end_func
!begin_func __do_global_dtors_aux
cmpb
jne
cmpq
push
mov
je
mov
callq
callq
movb
pop
retq
nopl
repz
nopw
~end_func
!begin_func frame_dummy
push
mov
pop
jmpq
nopw
~end_func
!begin_func __libc_csu_init
push
push
mov
push
push
lea
push
lea
push
mov
mov
sub
sub
sar
callq
test
je
xor
nopl
mov
mov
mov
callq
add
cmp
jne
add
pop
pop
pop
pop
pop
pop
retq
nop
nopw
~end_func
!begin_func __libc_csu_fini
repz
~end_func
!begin_func _fini
sub
add
retq
~end_func
#
!begin_func _init
sub
mov
test
je
callq
add
retq
~end_func
!begin_func .plt
pushq
jmpq
nopl
~end_func
!begin_func puts@plt
jmpq
pushq
jmpq
~end_func
!begin_func __stack_chk_fail@plt
jmpq
pushq
jmpq
~end_func
!begin_func __printf_chk@plt
jmpq
pushq
jmpq
~end_func
!begin_func __isoc99_scanf@plt
jmpq
pushq
jmpq
~end_func
!begin_func __cxa_finalize@plt
jmpq
xchg
~end_func
!begin_func main
sub
lea
mov
mov
xor
lea
callq
mov
lea
mov
xor
callq
lea
callq
mov
xor
jne
xor
add
retq
callq
nopw
xchg
~end_func
!begin_func _start
xor
mov
pop
mov
and
push
push
lea
lea
lea
callq
hlt
nopl
~end_func
!begin_func deregister_tm_clones
lea
push
lea
cmp
mov
je
mov
test
je
pop
jmpq
nopw
pop
retq
nopl
nopw
~end_func
!begin_func register_tm_clones
lea
lea
push
sub
mov
sar
mov
shr
add
sar
je
mov
test
je
pop
jmpq
nopw
pop
retq
nopl
nopw
~end_func
!begin_func __do_global_dtors_aux
cmpb
jne
cmpq
push
mov
je
mov
callq
callq
movb
pop
retq
nopl
repz
nopw
~end_func
!begin_func frame_dummy
push
mov
pop
jmpq
nopw
~end_func
!begin_func __libc_csu_init
push
push
mov
push
push
lea
push
lea
push
mov
mov
sub
sub
sar
callq
test
je
xor
nopl
mov
mov
mov
callq
add
cmp
jne
add
pop
pop
pop
pop
pop
pop
retq
nop
nopw
~end_func
!begin_func __libc_csu_fini
repz
~end_func
!begin_func _fini
sub
add
retq
~end_func
#
